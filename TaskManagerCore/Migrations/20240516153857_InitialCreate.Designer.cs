// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskManagerCore.Infrastructure.Sqlite.Dao;

#nullable disable

namespace TaskManagerCore.Migrations
{
    [DbContext(typeof(TaskFolderContext))]
    [Migration("20240516153857_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.5");

            modelBuilder.Entity("TaskManagerCore.Infrastructure.Sqlite.Entity.TaskDataEntity", b =>
                {
                    b.Property<long>("TaskDataEntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Completed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("RepeatingInterval")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Repetitions")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Streak")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("TaskFolderEntityId")
                        .HasColumnType("INTEGER");

                    b.HasKey("TaskDataEntityId");

                    b.HasIndex("TaskFolderEntityId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("TaskManagerCore.Infrastructure.Sqlite.Entity.TaskFolderEntity", b =>
                {
                    b.Property<long>("TaskFolderEntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TaskFolderEntityId");

                    b.ToTable("Folders");
                });

            modelBuilder.Entity("TaskManagerCore.Infrastructure.Sqlite.Entity.TaskDataEntity", b =>
                {
                    b.HasOne("TaskManagerCore.Infrastructure.Sqlite.Entity.TaskFolderEntity", null)
                        .WithMany("Tasks")
                        .HasForeignKey("TaskFolderEntityId");
                });

            modelBuilder.Entity("TaskManagerCore.Infrastructure.Sqlite.Entity.TaskFolderEntity", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
