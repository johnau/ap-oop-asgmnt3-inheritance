<ContentDialog
    x:Class="TaskManager.App.UWP.Views.NewTaskDialog"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="using:TaskManager.App.UWP.Views"
    xmlns:service="using:TaskManager.App.UWP.Services"
    xmlns:winui="using:Microsoft.UI.Xaml.Controls"
    xmlns:model="using:TaskManager.App.UWP.Core.Models"
    xmlns:behaviors="using:TaskManager.App.UWP.Behaviors"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:converters="using:TaskManager.App.UWP.Converters"
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    RequestedTheme="{x:Bind service:ThemeSelectorService.Theme, Mode=OneWay}"
    mc:Ignorable="d"
    Title="New Task"
    PrimaryButtonText="Create"  
    CloseButtonText="Cancel"
    DefaultButton="Primary"
    IsPrimaryButtonEnabled="{x:Bind TaskDescriptionTextBox.Text, Mode=OneWay, Converter={StaticResource TextToBoolConverter}}">

    <ContentDialog.Resources>
        <converters:TextToBoolConverter x:Key="TextToBoolConverter" />
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    </ContentDialog.Resources>

    <i:Interaction.Behaviors>
        <ic:EventTriggerBehavior EventName="PrimaryButtonClick">
            <ic:InvokeCommandAction Command="{x:Bind ViewModel.NewTaskInvokedCommand}" CommandParameter="{Binding ElementName=TaskDescriptionTextBox, Path=Text}" />
        </ic:EventTriggerBehavior>
    </i:Interaction.Behaviors>

    <ContentDialog.TitleTemplate>
        <DataTemplate>
            <StackPanel Orientation="Horizontal">
                <Image Source="ms-appx:///Assets/Square150x150Logo.scale-200.png" Width="40" Height="40" Margin="10,0"/>
                <TextBlock Text="Create New Task"/>
            </StackPanel>
        </DataTemplate>
    </ContentDialog.TitleTemplate>
    
    <StackPanel HorizontalAlignment="Center" Spacing="5">

        <TextBlock>
            <Run Text="In folder:" />
            <Run Text=" " FontSize="10"/> 
            <Run Text="{x:Bind ViewModel.ParentFolderId, Mode=OneWay}" FontWeight="Bold" />
        </TextBlock>
        <StackPanel HorizontalAlignment="Center">
            <TextBlock TextWrapping="WrapWholeWords">
                <Run>Task Type</Run>
            </TextBlock>
            <ComboBox
                x:Name="TaskTypeComboBox"
                SelectedIndex="{x:Bind ViewModel.TaskTypeIndex, Mode=TwoWay}"
                Margin="0,0,0,10"
                HorizontalAlignment="Center">
                <ComboBoxItem Content="One-Time" />
                <ComboBoxItem Content="Repeating" />
                <ComboBoxItem Content="Tracked" />
            </ComboBox>
        </StackPanel>
        <TextBlock TextWrapping="WrapWholeWords">
            <Run>Task Description</Run>
        </TextBlock>
        <TextBox x:Name="TaskDescriptionTextBox" Text="{x:Bind ViewModel.TaskDescription, Mode=TwoWay}" PlaceholderText="New task description..." Margin="0,0,0,10" />
        <TextBlock TextWrapping="WrapWholeWords">
            <Run>Task Notes</Run>
            <Run FontStyle="Italic">(Optional)</Run>
        </TextBlock>
        <ScrollViewer VerticalScrollBarVisibility="Auto" Height="100">
            <TextBox
                x:Name="TaskNotesTextBox"
                Text="{x:Bind ViewModel.TaskNotes, Mode=TwoWay}"
                PlaceholderText="New task notes..."
                Margin="0,0,0,10"
                AcceptsReturn="True"
                TextWrapping="Wrap" />
        </ScrollViewer>
        <CheckBox x:Name="TaskDueDateCheckBox" IsChecked="{x:Bind ViewModel.TaskHasDueDate, Mode=TwoWay}" Content="Task Has Due Date" HorizontalAlignment="Center" />
        <StackPanel Orientation="Vertical" HorizontalAlignment="Center" Margin="0,10,0,0">
            <DatePicker
                IsEnabled="{x:Bind ViewModel.TaskHasDueDate, Mode=OneWay}"
                SelectedDate="{x:Bind ViewModel.SelectedDate, Mode=TwoWay}"
                HorizontalAlignment="Stretch" />
            <TimePicker
                IsEnabled="{x:Bind ViewModel.TaskHasDueDate, Mode=OneWay}"
                SelectedTime="{x:Bind ViewModel.SelectedTime, Mode=TwoWay}"
                HorizontalAlignment="Stretch" />
        </StackPanel>
        <StackPanel
                x:Name="RepeatingTaskDetailsDisplay"
                HorizontalAlignment="Center"
                Visibility="{x:Bind ViewModel.TaskHasInterval, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">
            <TextBlock TextWrapping="WrapWholeWords">
                <Run>Repetition Interval</Run>
            </TextBlock>
            <ComboBox
                x:Name="TaskRepeatIntervalComboBox"
                Margin="0,0,0,10"
                HorizontalAlignment="Center"
                Width="100"
                ItemsSource="{x:Bind ViewModel.TimeIntervals, Mode=OneWay}"
                SelectedIndex="{x:Bind ViewModel.SelectedTaskIntervalIndex, Mode=TwoWay}">
            </ComboBox>
        </StackPanel>
    </StackPanel>
</ContentDialog>
